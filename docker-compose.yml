version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ultimate_postgres
    environment:
      POSTGRES_USER: ultimate_user
      POSTGRES_PASSWORD: ultimate_pass
      POSTGRES_DB: ultimate_dline
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ultimate_network

  redis:
    image: redis:7-alpine
    container_name: ultimate_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ultimate_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ultimate_backend
    environment:
      DATABASE_URL: postgresql://ultimate_user:ultimate_pass@postgres:5432/ultimate_dline
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-development_secret_change_in_production}
      NODE_ENV: development
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - ultimate_network
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ultimate_frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000
      REACT_APP_WS_URL: ws://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ultimate_network
    command: npm start

volumes:
  postgres_data:
  redis_data:

networks:
  ultimate_network:
    driver: bridge